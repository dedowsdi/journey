<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>860</x>
      <y>40</y>
      <w>300</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>Program
-
apply(uniform)
getUniformLocation(uniformNameId)
-
_lastAppliedUniformList</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>940</x>
      <y>300</y>
      <w>100</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>Shader
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>890</x>
      <y>120</y>
      <w>120</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;100.0;180.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>10</x>
      <y>0</y>
      <w>540</w>
      <h>470</h>
    </coordinates>
    <panel_attributes>osg built-in uniforms:

osg_ModelViewMatrix
osg_ProjectionMatrix
osg_ModelViewProjectionMatrix
osg_NormalMatrix (mat3)

They are created in osg::State::State()

osg built-in attributes:

0   osg_Vertex
1   osg_Normal
2   osg_Color
3   osg_MultiTexCoord0-8
11  osg_SecondaryColor
12  osg_FogColor

They are created in osg::State::resetVertexAttributeAlias
osg::Program::linkProgram will respect this attribute bindings.

osg create alias of osg_ for gl_ for both uniforms and attributes.
All shader sources undergoes
State::convertVertexShaderSourceToOsgBuiltIns()

Program bookkeep last appied uniforms,it's updated if uniform is dirty.
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1100</x>
      <y>240</y>
      <w>350</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>State
--
convertVertexShaderSourceToOsgBuiltIns()
resetVertexAttributeAlias()
getAttributeBindingList()
applyUniformList(uniformMap, uniformList)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1150</x>
      <y>110</y>
      <w>40</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;20.0;130.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1030</x>
      <y>300</y>
      <w>90</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;70.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>880</x>
      <y>600</y>
      <w>450</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>deprecated Uniform
--
Uniform(name, data)
getInternalArrayNumElements() // total element size
getTypeNumComponents(type) // single element size
--
_type
_numElements // sameas count of glUniform*v
_floatArray (double, int, uint...)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>730</x>
      <y>390</y>
      <w>200</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>UniformBase
--
dirty()
/apply(ext, location)/
static uint getNameId()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1080</x>
      <y>430</y>
      <w>100</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>StateSet</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>920</x>
      <y>420</y>
      <w>180</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>160.0;20.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>810</x>
      <y>120</y>
      <w>80</w>
      <h>290</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>60.0;10.0;10.0;270.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>880</x>
      <y>760</y>
      <w>460</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>Type infomation is stored in _type. lots of operatio
depends on switch(type). Every uniform has a
an unique name id ( it doesn't matter if the same name with
different type or meaning is used across different shaders,
as it's always unique in a linked program), program cache
uniform location by this id.
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>420</x>
      <y>580</y>
      <w>260</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>&lt;type&gt;
TemplateUniform
--
_single_value
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>570</x>
      <y>500</y>
      <w>240</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;80.0;220.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>800</x>
      <y>500</y>
      <w>290</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;</panel_attributes>
    <additional_attributes>270.0;100.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>150</x>
      <y>580</y>
      <w>190</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>GLExtensions
--
glUniform(name, data)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>330</x>
      <y>600</y>
      <w>110</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>90.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>580</x>
      <y>690</y>
      <w>260</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>&lt;type&gt;
TemplateArrayUniform
--
_vector_value</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>730</x>
      <y>500</y>
      <w>90</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;190.0;70.0;10.0</additional_attributes>
  </element>
</diagram>
