<?xml version="1.0" encoding="UTF-8"?><diagram program="umlet" version="13.3">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>490</x>
      <y>0</y>
      <w>160</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>MatrixTransform</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>320</x>
      <y>150</y>
      <w>230</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>Skeleton
--
setDefaultUpdateCallback()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>640</x>
      <y>140</y>
      <w>270</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>Bone
--
getMatrixInBoneSpace()
getMatrixInSkeletonSpace()
getInvBindMatrixInSkeletonSpace()
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>400</x>
      <y>20</y>
      <w>170</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>150.0;10.0;10.0;130.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>580</x>
      <y>20</y>
      <w>130</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;110.0;120.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1120</x>
      <y>40</y>
      <w>180</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>UpdateMatrixTransform</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1150</x>
      <y>160</y>
      <w>100</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>UpdateBone</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1190</x>
      <y>60</y>
      <w>30</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>480</x>
      <y>260</y>
      <w>100</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>Geometry</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>430</x>
      <y>360</y>
      <w>250</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>RigGeometry
--
copyFrom(sourceGeometry)
--
_matrixFromSkeletonToGeometry</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>500</x>
      <y>280</y>
      <w>30</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>550</x>
      <y>280</y>
      <w>30</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;80.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>130</x>
      <y>370</y>
      <w>230</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>RigTransform
--
operator(rigGeometry)
prepareData(rigGeometry)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>40</x>
      <y>570</y>
      <w>210</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>RigTransformSoftware
--
_uniqVertexGroupList</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>100</x>
      <y>490</y>
      <w>160</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>140.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>280</x>
      <y>570</y>
      <w>460</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>RigTransformHardware
--
_perVertexInfluences:[ [&lt;bone_palette_index, bone_weight&gt;] ]
_bonePalette:[ref_ptr&lt;bone&gt;]
_boneNamePalletteIndex:{bone_name : pallete_index}
_uniformMatrixPalette</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>270</x>
      <y>490</y>
      <w>180</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;160.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>770</x>
      <y>370</y>
      <w>350</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>{ bone_name : [&lt;vertex_index, bone_weight&gt;] }
VertexInfluenceMap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1190</x>
      <y>370</y>
      <w>130</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>VertexInfluence
--
_boneName
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1110</x>
      <y>370</y>
      <w>100</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;80.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1190</x>
      <y>230</y>
      <w>140</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>IndexWeightList</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1240</x>
      <y>250</y>
      <w>40</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;20.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>670</x>
      <y>370</y>
      <w>120</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;100.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>350</x>
      <y>370</y>
      <w>100</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>80.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>770</x>
      <y>490</y>
      <w>660</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>A skin vertex can be transformed by multiple bones, so it has to reside in skeleton space.

A skin vertex is transformed by a bone as:
vertex * invBindMatrixInSkeletonSpace() * matrixInSkeletonSpace()

It works like transform vetex to root bone space, then apply skeleton matrix of current bone.
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>900</x>
      <y>160</y>
      <w>270</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
update _matrixInSkeletonSpace</panel_attributes>
    <additional_attributes>10.0;20.0;250.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>30</x>
      <y>750</y>
      <w>400</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>RigTransformSoftware::VertexGroup
--
computeMatrixForVertexSet()
--
_boneWeights : [BonePtrWeight]
_vertices
_result</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>0</x>
      <y>130</y>
      <w>290</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>Bones should always be placed before non-bone child, ValidateSkeletonVisitor is used to make sure of that.
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>770</x>
      <y>680</y>
      <w>690</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>In order to speedup transform, RigTransformSoftware group vertices by BonePtrWeightList and store it in _uniqVertexGroupList. Vertices in the same group are transformed by the same bones and weights.

RigGeometry must be a child of Skeleton. Each RigGeometry has a source Geometry, it's the animation source. When animating, it use this fomular:
new_pos = source_pos * skeletonToGeometryMatrix 
                                     * accumulatedBoneMatrix
                                     * invSkeletoToGeometryMatrix.

What's the point of transform in geometry sapce? Why not transform directly in skeleton space ?

bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>480</x>
      <y>890</y>
      <w>770</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>RigTransformHardware support at most 8 bones per vertex, each boneWeigit in skinning.vert represent two palette_index,weight.

One goal of RigTransformHardware is to create a bone matrix palette, it's slot has content:
skeletonToGeometryMatrix * boneInvBindMatrix * boneSkeletonMatrix * invSkeletonToGeometryMatrix

The other goal of RigTransformHardware is create &lt;palette_index,bone_weight&gt; attributes, a per vertex infulence list is built to help that.

bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>140</x>
      <y>1000</y>
      <w>300</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>Need refactor, it's really really ugly.
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>30</x>
      <y>890</y>
      <w>410</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>&lt;local_bone_id_in_vim, bone_weight&gt;
RigTransformSoftware::BonePtrWeight
--
_boneptr</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
